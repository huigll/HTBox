@model HTBox.Web.Models.WebMenu
 

<div class="form">
    <div class="form-title-l">
        <div class="form-title-r">
            <div class="form-title-c">
                <div class="form-title-search-container">
                    <span class="form-title-text">Menu Query</span></div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm("Search", "Menu", FormMethod.Get))
    {
        
        <div class="form-content-l">
            <div class="form-content-r">
                <div class="form-content-c">
                    <table width="100%" class="x-content-body">
                        <tr>
                            <td width="15%" class="x-content-body-label">
                                <span>Name</span>
                            </td>
                            <td width="85%">
                                @Html.TextBox("Name", @Request.QueryString["name"])
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
        <div class="form-bottom-l">
            <div class="form-bottom-r">
                <div class="form-bottom-c">
                    <div style="padding: 1px">
                        <table cellpadding="0">
                            <tr>
                                <td>
                                    <input type="submit" value="Search" />
                                </td>
                                <td>
                                    <input type="button" onclick="window.location.href='@Url.Action("Create", "Menu", new { parentId = Model.ParentId })'; return false;" value="Create"/>
                                    
                                        @Html.GetParentNavigation(Model)
                                    
                                    
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        
    }
</div>
<div class="gvContainer">
    <table class="gv" width="100%">
        <caption>
            <div>
                Menu List</div>
        </caption>
        <tr class="head">
            <th>
            </th>
            <th>
                @Html.ActionSortLink("Name", "Search", new { @orderby = "MenuName" },
                new
                {
                    @class = @Request.QueryString["orderby"] == "MenuName" ?
                       (@Request.QueryString["desc"] == "false" ? "sasc" : "sdesc")
                       : ""
                }, this.Request.QueryString)
            </th>
            <th>
                @Html.ActionSortLink("Url", "Search", new { @orderby = "PageUrl" },
                new
                {
                    @class = @Request.QueryString["orderby"] == "PageUrl" ?
                       (@Request.QueryString["desc"] == "false" ? "sasc" : "sdesc")
                       : ""
                }, this.Request.QueryString)
            </th>
             <th>
                @Html.ActionSortLink("IsPublic", "Search", new { @orderby = "IsPublic" },
                new
                {
                    @class = @Request.QueryString["orderby"] == "IsPublic" ?
                       (@Request.QueryString["desc"] == "false" ? "sasc" : "sdesc")
                       : ""
                }, this.Request.QueryString)
            </th>
            <th width="25px">
                Add
            </th>
        </tr>
        @foreach (var item in Model.Menus)
        {
            <tr class="row">
                <td width="50px">
                    @Html.ActionImage("Edit", new { id = item.MenuId }, "~/Content/images/edit.gif", "Edit")
                    @if (!Model.HasChildren(item))
                    {
                        @Html.ActionImage("Delete", new { id = item.MenuId }, new { @class = "delete-link", @imagesrc = "~/Content/images/editdelete.png" })
                    }
                </td>
                <td>
                    @if (Model.HasChildren(item))
                    {
                        @Html.ActionLink(item.MenuName, "Search", new { parentId = item.MenuId }) 
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.MenuName)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PageUrl)
                </td>
                <td>
                    @Html.DisplayTextFor(modelItem => item.IsPublic)
                </td>
                <td>
                    @Html.ActionLink("Add", "Create", new { parentId = item.MenuId })
                </td>
            </tr>
        }
    </table>
</div>
@Html.Pager(Model.StartPageNo, Model.CurrentPageNo, Model.TotalPageNo, Model.NeedToShow, "p", this.Request.QueryString)
<div id="delete-dialog" title="Confirmation">
    <p>
        Are you sure you want to delete this Item?</p>
</div>
<script type="text/javascript">
    var deleteLinkObj;
    // delete Link
    $('.delete-link').click(function () {
        deleteLinkObj = $(this);  //for future use
        $('#delete-dialog').dialog('open');
        return false; // prevents the default behaviour
    });
    $('#delete-dialog').dialog({
        autoOpen: false, width: 400, resizable: false, modal: true, //Dialog options
        buttons: {
            "Continue": function () {
                $.post(deleteLinkObj[0].href, function (data) {  //Post to action
                    if (data == '@Boolean.TrueString') {
                        deleteLinkObj.closest("tr").hide('fast'); //Hide Row
                        window.location.href = window.location.href;
                    }
                    else {
                        //(optional) Display Error
                    }
                });
                $(this).dialog("close");
            },
            "Cancel": function () {
                $(this).dialog("close");
            }
        }
    });
</script>
